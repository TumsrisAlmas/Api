{
	"info": {
		"_postman_id": "602b8596-7b49-44e0-9809-dab9a22e6feb",
		"name": "ApiiLearning",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();",
							"pm.test(\"Ensure All Users Has Been Retrieved\", () => {",
							"pm.expect(pm.response.code).to.equal(200);",
							"pm.expect(response.meta.pagination.total).to.not.equal(\"\");",
							"pm.expect(response.meta.pagination.total).to.exist;",
							"pm.expect(response.meta.pagination.page).to.equal(1);",
							"pm.expect(response.meta.pagination.limit).to.equal(20);",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create A Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure New Customer Has Been Retrieved\", () => {",
							"pm.expect(pm.response.code).to.equal(201);",
							"var response = pm.response.json();",
							"pm.expect(response.meta).to.equal(null);",
							"pm.expect(response.data.name).to.exist;",
							"pm.expect(response.data.gender).to.exist;",
							"pm.expect(response.data.name).to.equal(pm.environment.get(\"randomFullName\"));",
							"pm.expect(response.data.email).to.equal(pm.environment.get(\"randomEmail\"));",
							"pm.expect(response.data.status).to.exist;",
							"",
							"// var gender = pm.response.gender;",
							"var uniqueId = response.data.id;",
							"pm.environment.set(\"uniqueId\", uniqueId);",
							"console.log(uniqueId);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomFullName = pm.variables.replaceIn('{{$randomFullName}}');",
							"pm.environment.set(\"randomFullName\",randomFullName);",
							"console.log(randomFullName);",
							"",
							"let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');",
							"pm.environment.set(\"randomEmail\", randomEmail);",
							"console.log(randomEmail);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n            \"id\": 897,\n            \"name\": \"{{randomFullName}}\",\n            \"email\": \"{{randomEmail}}\",\n            \"gender\": \"female\",\n            \"status\": \"inactive\"\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify User Data Is Updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure New Customer Has Been Retrieved\", () => {",
							"pm.expect(pm.response.code).to.equal(200);",
							"let response = pm.response.json();",
							"pm.expect(response.data.name).to.equal(pm.environment.get(\"randomFullName\"));",
							"pm.expect(response.data.email).to.equal(pm.environment.get(\"randomEmail\"));",
							"pm.expect(response.data.name).to.exist;",
							"pm.expect(response.data.gender).to.exist;",
							"pm.expect(response.data.email).to.exist;",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{uniqueId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{uniqueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Existig User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');",
							"pm.environment.set(\"randomEmail\", randomEmail);",
							"console.log(randomEmail);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure New Customer Has Been Retrieved\", () => {",
							"pm.expect(pm.response.code).to.equal(200);",
							"var response = pm.response.json();",
							"pm.expect(response.data.email).to.equal(pm.environment.get(\"randomEmail\"));",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n       \"email\": \"{{randomEmail}}\",\n            \"gender\": \"male\",\n            \"status\": \"inactive\"\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{uniqueId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{uniqueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify IUser is Updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure\",()=> {",
							"pm.expect(pm.response.code).to.equal(200);",
							"let response = pm.response.json();",
							"pm.expect(response.data.id).to.equal(pm.environment.get(\"uniqueId\"));",
							"pm.expect(response.data.email).to.equal(pm.environment.get(\"randomEmail\"));",
							"",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{uniqueId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{uniqueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure New Cuntomer Has Been Deleted\", () => {",
							"pm.expect(pm.response.code).to.equal(204);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{uniqueId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{uniqueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify User Data Is Deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ensure New Customer Has Been Deleted\", () => {",
							"pm.expect(pm.response.code).to.equal(404);",
							"let response = pm.response.json();",
							"pm.expect(response.data.message).to.equal(\"Resource not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{Authentication}}",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{uniqueId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{uniqueId}}"
					]
				}
			},
			"response": []
		}
	]
}